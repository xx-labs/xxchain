
//! Autogenerated weights for `xx_team_custody`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-03-24, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `workstation`, CPU: `AMD Ryzen 9 5900X 12-Core Processor`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/xxnetwork-chain
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=xx_team_custody
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --output=./weights/xx_team_custody.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

/// Weight functions for `xx_team_custody`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> xx_team_custody::WeightInfo for WeightInfo<T> {
	/// Storage: XXCustody TeamAccounts (r:1 w:1)
	/// Proof Skipped: XXCustody TeamAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: System Account (r:3 w:3)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: XXCustody TotalCustody (r:1 w:1)
	/// Proof Skipped: XXCustody TotalCustody (max_values: Some(1), max_size: None, mode: Measured)
	fn payout() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `787`
		//  Estimated: `15323`
		// Minimum execution time: 54_582_000 picoseconds.
		Weight::from_parts(55_634_000, 0)
			.saturating_add(Weight::from_parts(0, 15323))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(5))
	}
	/// Storage: XXCustody Custodians (r:1 w:0)
	/// Proof Skipped: XXCustody Custodians (max_values: None, max_size: None, mode: Measured)
	/// Storage: XXCustody CustodyAccounts (r:1 w:0)
	/// Proof Skipped: XXCustody CustodyAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Staking Bonded (r:1 w:1)
	/// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	/// Storage: Staking Ledger (r:1 w:1)
	/// Proof: Staking Ledger (max_values: None, max_size: Some(1124), added: 3599, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Staking CurrentEra (r:1 w:0)
	/// Proof: Staking CurrentEra (max_values: Some(1), max_size: Some(4), added: 499, mode: MaxEncodedLen)
	/// Storage: Balances Locks (r:1 w:1)
	/// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	fn custody_bond() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1200`
		//  Estimated: `27302`
		// Minimum execution time: 45_505_000 picoseconds.
		Weight::from_parts(46_156_000, 0)
			.saturating_add(Weight::from_parts(0, 27302))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: XXCustody Custodians (r:1 w:0)
	/// Proof Skipped: XXCustody Custodians (max_values: None, max_size: None, mode: Measured)
	/// Storage: XXCustody CustodyAccounts (r:1 w:0)
	/// Proof Skipped: XXCustody CustodyAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Staking Bonded (r:1 w:0)
	/// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	/// Storage: Staking Ledger (r:1 w:1)
	/// Proof: Staking Ledger (max_values: None, max_size: Some(1124), added: 3599, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	/// Storage: Balances Locks (r:1 w:1)
	/// Proof: Balances Locks (max_values: None, max_size: Some(1299), added: 3774, mode: MaxEncodedLen)
	/// Storage: VoterList ListNodes (r:1 w:0)
	/// Proof: VoterList ListNodes (max_values: None, max_size: Some(154), added: 2629, mode: MaxEncodedLen)
	fn custody_bond_extra() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1599`
		//  Estimated: `30230`
		// Minimum execution time: 47_178_000 picoseconds.
		Weight::from_parts(48_300_000, 0)
			.saturating_add(Weight::from_parts(0, 30230))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: XXCustody Custodians (r:1 w:0)
	/// Proof Skipped: XXCustody Custodians (max_values: None, max_size: None, mode: Measured)
	/// Storage: XXCustody CustodyAccounts (r:1 w:0)
	/// Proof Skipped: XXCustody CustodyAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Staking Bonded (r:1 w:1)
	/// Proof: Staking Bonded (max_values: None, max_size: Some(72), added: 2547, mode: MaxEncodedLen)
	/// Storage: Staking Ledger (r:2 w:2)
	/// Proof: Staking Ledger (max_values: None, max_size: Some(1124), added: 3599, mode: MaxEncodedLen)
	fn custody_set_controller() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1129`
		//  Estimated: `20913`
		// Minimum execution time: 29_145_000 picoseconds.
		Weight::from_parts(29_695_000, 0)
			.saturating_add(Weight::from_parts(0, 20913))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: XXCustody Custodians (r:1 w:0)
	/// Proof Skipped: XXCustody Custodians (max_values: None, max_size: None, mode: Measured)
	/// Storage: XXCustody CustodyAccounts (r:1 w:0)
	/// Proof Skipped: XXCustody CustodyAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn custody_set_proxy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `483`
		//  Estimated: `16195`
		// Minimum execution time: 27_401_000 picoseconds.
		Weight::from_parts(27_902_000, 0)
			.saturating_add(Weight::from_parts(0, 16195))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: XXCustody TeamAccounts (r:1 w:0)
	/// Proof Skipped: XXCustody TeamAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: Proxy Proxies (r:1 w:1)
	/// Proof: Proxy Proxies (max_values: None, max_size: Some(1241), added: 3716, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(128), added: 2603, mode: MaxEncodedLen)
	fn team_custody_set_proxy() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `532`
		//  Estimated: `12296`
		// Minimum execution time: 26_630_000 picoseconds.
		Weight::from_parts(27_161_000, 0)
			.saturating_add(Weight::from_parts(0, 12296))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: XXCustody Custodians (r:0 w:1)
	/// Proof Skipped: XXCustody Custodians (max_values: None, max_size: None, mode: Measured)
	fn add_custodian() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_614_000 picoseconds.
		Weight::from_parts(7_945_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: XXCustody Custodians (r:0 w:1)
	/// Proof Skipped: XXCustody Custodians (max_values: None, max_size: None, mode: Measured)
	fn remove_custodian() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 7_754_000 picoseconds.
		Weight::from_parts(8_005_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: XXCustody TeamAccounts (r:2 w:2)
	/// Proof Skipped: XXCustody TeamAccounts (max_values: None, max_size: None, mode: Measured)
	fn replace_team_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `388`
		//  Estimated: `6328`
		// Minimum execution time: 15_418_000 picoseconds.
		Weight::from_parts(15_890_000, 0)
			.saturating_add(Weight::from_parts(0, 6328))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
}
