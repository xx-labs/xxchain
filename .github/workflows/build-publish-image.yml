# This is an example GitHub action that will build and publish a Docker image to DockerHub, then automatically update OnFinality's network spec
# You need to add the following secrets to your GitHub Repository or Organization to make this work
# - DOCKER_USERNAME: The username of the DockerHub account. E.g. parity
# - DOCKER_TOKEN: Access token for DockerHub, see https://docs.docker.com/docker-hub/access-tokens/. E.g. VVVVVVVV-WWWW-XXXXXX-YYYY-ZZZZZZZZZ
# - DOCKER_REPO: The unique name of the DockerHub repository. E.g. parity/polkadot
# OnFinality access credential instructions https://documentation.onfinality.io/support/onfinality-cli-tool-and-access-keys
# - ONF_ACCESS_KEY: The unique access key to OnFinality
# - ONF_SECRET_KEY: A secret access key to OnFinality
# - ONF_WORKSPACE_ID: The workspace ID of your OnFinality workspace, you can retrieve this from your workspace settings. E.g. 6683212593101979648
# - ONF_NETWORK_KEY: The network ID of your OnFinality workspace, you can retrieve this from the URL when viewing the network. E.g. f987705c-fe75-4069-99b4-77d62c4fe58k

name: Build & Publish Docker Image

# Controls when the action will run.
on:
    # Triggers the workflow on push events but only for the main branch
    push:
        tags:
            - "*"

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
        inputs:
            logLevel:
                description: "Log level"
                required: false
                default: "warning"
                type: choice
                options:
                    - info
                    - warning
                    - debug

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-20.04

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Check out the repo
              uses: actions/checkout@v2.5.0

            # Login to Docker hub using the credentials stored in the repository secrets
            - name: Log in to Docker Hub
              uses: docker/login-action@v2.1.0
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_TOKEN }}

            # Get the commit short hash, to use as the rev
            - name: Calculate rev hash
              id: rev
              run: echo "value=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

            # Build and push 2 images, One with the version tag and the other with latest tag
            - name: Build and push Docker images
              uses: docker/build-push-action@v3.2.0
              with:
                  context: .
                  push: true
                  tags: ${{ secrets.DOCKER_REPO }}:${{ steps.rev.outputs.value }}, ${{ secrets.DOCKER_REPO }}:latest

            - name: Update image version of the existing network spec
              uses: "OnFinality-io/action-onf-release@v1"
              with:
                  # These keys should be in your GitHub secrets
                  # https://documentation.onfinality.io/support/onfinality-cli-tool-and-access-keys
                  onf-access-key: ${{ secrets.ONF_ACCESS_KEY }}
                  onf-secret-key: ${{ secrets.ONF_SECRET_KEY }}
                  onf-workspace-id: ${{ secrets.ONF_WORKSPACE_ID }}
                  onf-network-key: ${{ secrets.ONF_NETWORK_KEY }}
                  # Add a new image version to network spec
                  onf-sub-command: image
                  onf-action: add
                  image-version: v${{ steps.rev.outputs.value }}
